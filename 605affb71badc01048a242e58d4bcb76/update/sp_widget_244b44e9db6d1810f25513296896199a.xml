<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ratelockDocumentViewer($scope, $timeout, $anchorScroll, $window, pdfDelegate, $sce, $http, $rootScope, $element) {
  /* widget controller */
  var c = this;

  c.isReady = false;
  c.isLoading = true;
  c.isDocumentReady = false;

  $scope.isHidingToolbar = false;

  c.$onInit = function () {
    $scope.attachmentUrl = c.data.attachmentUrl;
    c.attachmentType = c.data.attachmentType;

    switch (c.attachmentType) {
      case 'pdf':
        return c.setPdfDocument();
      case 'word':
        return c.generateWordDocument();
      case 'image':
        return c.createImageDocument();
      default:
        c.isLoading = false;
        c.isReady = true;
        c.isDocumentReady = true;
        break;
    }
  };

  c.$onDestroy = function () {
    c.pdf = undefined;
    c.wordDoc = undefined;
  };

  c.hideToolbar = function ($event) {
    return baseEventFn($event, function () {
      $scope.isHidingToolbar = !$scope.isHidingToolbar;
    });
  };

  c.download = function ($event) {
    return baseEventFn($event, function () {
      var url = c.getDownloadUrl();

      c.hasDownloaded = true;

      $window.open(url, '_self');
    });
  };


  $rootScope.$on('pdf.page.rendering', function () {
    c.isReady = false;
  });

  $rootScope.$on('pdf.page.rendered', function () {
    c.isReady = true;
    if (c.pdf && !c.total) {
      c.total = c.pdf.getPageCount();
    }
    if (!c.isDocumentReady) {
      c.isDocumentReady = true;
    }
  });

  c.getDownloadUrl = function () {
    return $scope.attachmentUrl.replace('view=true&', '');
  };

  c.createImageDocument = function () {
    c.isDocumentReady = true;
    c.isReady = true;
    c.isLoading = false;
  };

  c.setPdfDocument = function () {
    c.pdf = pdfDelegate.$getByHandle('pdf-handle');
    c.page = 1;
    c.isLoading = false;
  };

  c.generateWordDocument = function () {
    $http.get($scope.attachmentUrl, {
      responseType: 'arraybuffer'
    }).then(function (response) {
      if (response.data) {
        try {
          $window.mammoth.convertToHtml({
              arrayBuffer: response.data
            }, {
              includeEmbeddedStyleMap: true
            }).then(function (result) {
              c.isLoading = false;
              c.isReady = true;
              c.isDocumentReady = true;
              c.wordDoc = $sce.trustAsHtml(result.value);
            })
            .done();
        } catch (e) {
          $scope.hasErrors = true;
          c.isLoading = false;
          c.isReady = true;
          c.isDocumentReady = true;
        }

      }
    });
  };

  c.goTo = function () {
    $anchorScroll();
  };

  c.zoomOut = function ($event) {
    return baseEventFn($event, function () {
      if (c.pdf) {
        c.pdf.zoomOut();
      }
    });
  };

  c.zoomIn = function ($event) {
    return baseEventFn($event, function () {
      if (c.pdf) {
        c.pdf.zoomIn();
      }
    });
  };

  c.rotate = function ($event) {
    return baseEventFn($event, function () {
      if (c.pdf) {
        c.pdf.rotate(45);
      }
    });
  };

  c.goToPreviousPage = function ($event) {
    return baseEventFn($event, function () {
      if (c.pdf) {
        if (c.page !== 1) {
          c.pdf.prev();
          updateCurrentPage();
        }
      }
    });
  };

  c.goToNextPage = function ($event) {
    return baseEventFn($event, function () {
      if (c.pdf) {
        var total = c.pdf.getPageCount();
        if (c.page < total) {
          c.pdf.next();
          updateCurrentPage();
        }
      }
    })
  };

  c.isPageButtonDisabled = function (type) {
    if (!c.pdf) return true;

    if (type === 'previous') {
      return c.page == 1;
    }

    if (type === 'next') {
      return c.page >= c.pdf.getPageCount();
    }
  };


  function updateCurrentPage() {
    if (c.pdf) {
      c.page = c.pdf.getCurrentPage();
    }
  }

  function baseEventFn($event, fn) {
    $event.preventDefault();
    $event.stopPropagation();

    if (c.isReady) {
      return fn();
    }
  }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>$brand-primary: #f95050;

::-webkit-scrollbar {
  height: 5px;
  width: 5px;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 0.5px rgba(0, 0, 0, 0.01);
  background-color: rgba(0, 0, 0, 0.01);
}

::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 0.2em;
  outline: 0.5px solid #eee;
}

.loading {
  position: absolute;
  top: 15px;
  left: 0;
  width: 100%;
  height: 75vh;
  z-index: 1051;
  background: inherit;

  &amp; .loading-icon {
    width: 100%;
    height: 100%;
    min-height: 74vh;
    max-height: 75vh;
    background: #fff;
    transition: all 0.4s ease;
    justify-content: center;
    align-items: center;
    position: relative;
    vertical-align: middle;
    display: flex;
    font-size: 5rem;

    &amp; .fa {
      color: $brand-primary;
    }
  }
}

.document-viewer-container {
  min-height: 74vh;
  max-height: 75vh;
  overflow: hidden;
  cursor: initial;
}

.document-viewer {
  max-height: 75vh;
  overflow: auto;
  max-width: 100%;
  min-height: 74vh;
}

.pdf-viewer-container {
  padding: 0px 15px 15px 15px;
  display: flex;
  cursor: initial;
}

.download-viewer {
	padding: 30px;
  display: flex;
  text-align: center;
  justify-content: center;
  vertical-align: middle;
  width: 100%;
  
  &amp; .download-message {
  	font-size: 18px;
  }
}

.image-viewer {
  padding: 15px;
  display: flex;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
}

.word-viewer,
.excel-viewer {
  padding: 0px 15px 15px 15px;
  display: flex;

  &amp; .document {
    img {
      display: block;
      max-width: 50vw;
      height: auto;
    }
  }
}

.toolbar-top {
  position: absolute;
  display: inline-block;
  background: transparent;
  width: 100%;
  height: 30px;
  top: 15px;
  opacity: 1;
  z-index: 1051;
  transition: opacity 0.1s ease-in;

  &amp;.toolbar-hidden {
    opacity: 0;
    transition: opacity 0.1s ease-out;
  }

  &amp; .toolbar-controls-left {
    display: inline-block;
    width: 50%;
  }

  &amp; .toolbar-controls-right {
    display: inline-flex;
    width: 45%;
    justify-content: flex-end;

    &amp; .btn {
      display: inline-block;
      margin-right: 5px;
    }

    &amp; .page-count {
      margin: 5px 5px 0px 5px;
      opacity: 1;
      transition: opacity 0.1s ease-in;

      &amp;.hidden-text {
        opacity: 0;
        transition: opacity 0.1s ease-out;
      }

    }

    &amp; .btn:not(:first-child) {
      margin-left: 5px;
    }
  }
}

canvas {
  z-index: 1050;
}

.toolbar-bottom {
  display: inline-block;
  position: absolute;
  background: transparent;
  width: 100%;
  height: 30px;
  opacity: 1;
  z-index: 1051;
  transition: opacity 0.1s ease-in;

  &amp;.toolbar-hidden {
    opacity: 0;
    transition: opacity 0.1s ease-out;
  }

  &amp; .toolbar-controls-left {
    display: inline-block;
    width: 50%;
  }

  &amp; .toolbar-controls-right {
    display: inline-flex;
    width: 40%;
    justify-content: flex-end;

    &amp;.document-panel {
      position: absolute;
      right: 50px;
      bottom: 50px;
      transition: all 0.1s ease-out;

      &amp; div.panel {
        border: 1px solid #666;
        box-shadow: 0 6px 14px 0 #666;
      }
    }

    &amp; .btn {
      display: inline-block;
      margin-left: 10px;
      margin-right: 5px;
      z-index: 1052;
    }

    &amp; .btn:not(:first-child) {
      margin-left: 5px;
    }
  }
}

.toolbar-controls-left {
  z-index: 1051;
  left: 15px;
  padding: 5px 0px;

  &amp; .btn {
    display: inline-block;
    margin-left: 10px;
    margin-right: 5px;
  }

  &amp; .btn:not(:first-child) {
    margin-left: 5px;
  }

}

.toolbar-controls-right {
  z-index: 1051;
  right: 15px;
  padding: 5px 0px;

  &amp;.page-count {
    text-align: right;
  }
}

.btn {
  transition: all 0.1s ease-in-out;

  &amp;:hover {
    box-shadow: 0 6px 14px 0 #666;
    transform: scale(1.05);
  }

  &amp;:active,
  &amp;:hover,
  &amp;:focus {
    outline: none;
    border-color: #666;
    box-shadow: none;
  }
}

.fab {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  box-shadow: 0 6px 10px 0 #666;
  transition: all 0.1s ease-in-out;

  font-size: 3rem;

  position: absolute;
  right: 45px;
  bottom: 50px;
  
  &amp;:active,
  &amp;:focus {
  	outline: none;
   	border: none;
  }
}

.fab:hover {
  box-shadow: 0 6px 14px 0 #666 !important;
  transform: scale(1.05);
}

.invalid-document {
  width: 100%;
  height: 100%;

  &amp; .message-container {
    width: 100%;
    height: 100%;
    padding: 30px;
    display: flex;
    justify-content: center;
    vertical-align: middle;

    &amp; .message {
      font-size: 3rem;
      font-weight: 700;
      text-align: center;
    }
  }
}

.toolbar-top,
.toolbar-bottom,
.loading {
  &amp;.ng-show {
  	animation: opacity 1s fade-in;
  }
  &amp;.ng-hide {
  	animation: opacity 1s fade-out;
  }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fade-out {
	from { opacity: 1; }
  to   { opacity: 0; }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ratelock_document_viewer</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Ratelock Document Viewer</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	var attachmentId = (input ? input.attachment : undefined) || options.attachmentId;
	data.document = (input ? input.doc : undefined) || options.doc;
	data.attachmentType = "download";
	
	if (attachmentId) {
		var attachment = createAttachment(attachmentId);
		if (attachment) {
			data.attachmentType = attachment.type;
			data.attachmentUrl = attachment.url;
		}
	}
	
	function createAttachment(sysId) {
		var gr = new GlideRecord('sys_attachment');
		gr.get(sysId);
		
		if (gr.isValidRecord()) {
			var contentType = gr.getValue('content_type');
			return {
				type: getShortType(contentType),
				url: '/sys_attachment.do?view=true&sys_id=' + gr.getUniqueValue()
			}
		}
	}
	
	function getShortType(contentType) {
		var type = 'download';
		switch (contentType) {
			case 'application/pdf':
				type = 'pdf';
				break;
			case 'application/msword':
				type = 'word';
				break;
			case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
				type = 'word';
				break;
			case 'image/jpeg':
        type = 'image';
        break;
      case 'image/jpg':
        type = 'image';
        break;
      case 'image/png':
        type = 'image';
        break;
      default:
        break;
		}
		return type;
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>douglas.schamberg</sys_created_by>
        <sys_created_on>2020-06-21 13:23:53</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>244b44e9db6d1810f25513296896199a</sys_id>
        <sys_mod_count>114</sys_mod_count>
        <sys_name>Ratelock Document Viewer</sys_name>
        <sys_package display_value="Ratelock" source="x_momo_ratelock">605affb71badc01048a242e58d4bcb76</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Ratelock">605affb71badc01048a242e58d4bcb76</sys_scope>
        <sys_update_name>sp_widget_244b44e9db6d1810f25513296896199a</sys_update_name>
        <sys_updated_by>douglas.schamberg@movement.com</sys_updated_by>
        <sys_updated_on>2020-09-06 13:13:46</sys_updated_on>
        <template><![CDATA[<div class="document-viewer-container" ng-show="c.attachmentType">
  <div class="toolbar-top" ng-show="c.isDocumentReady && !isHidingToolbar">
    <div class="toolbar-controls-left" ng-if="c.attachmentType === 'pdf'">
      <button class="btn btn-default btn-circle" ng-click="c.zoomOut($event)">
        <i class="icon-zoom-out"></i>
      </button>
      <button class="btn btn-default btn-circle" ng-click="c.zoomIn($event)">
        <i class="icon-zoom-in"></i>
      </button>
      <button class="btn btn-default btn-circle" ng-click="c.rotate($event)">
        <i class="icon-redo-action"></i>
      </button>
    </div>
    <div class="toolbar-controls-right" ng-if="c.attachmentType === 'pdf'">
      <button class="btn btn-default" ng-disabled="c.isPageButtonDisabled('previous')"
        ng-click="c.goToPreviousPage($event)">Previous</button>
      <span class="page-count" ng-class="{'hidden-text': isDragging}">{{ c.page }} / {{ c.total }}
        pages</span>
      <button class="btn btn-default" ng-disabled="c.isPageButtonDisabled('next')"
        ng-click="c.goToNextPage($event)">Next</button>
    </div>
    <div class="toolbar-controls-left" ng-if="c.attachmentType !== 'pdf' && c.attachmentType !== 'download'"></div>
    <div class="toolbar-controls-right" ng-if="c.attachmentType !== 'pdf' && c.attachmentType !== 'download'">
      <button class="btn btn-default" ng-click="c.download($event)">
        <i class="icon-download"></i>
      </button>
    </div>
  </div>
  <div class="document-viewer" ng-switch="c.attachmentType" ng-if="!hasErrors">
    <div class="pdf-viewer-container" ng-click="c.hideToolbar($event)" ng-switch-when="pdf">
      <pdf-viewer url="attachmentUrl" scale="1.3" show-toolbar="false" delegate-handle="pdf-handle"></pdf-viewer>
    </div>
    <div class="word-viewer" ng-switch-when="word">
      <div class="document" ng-bind-html="c.wordDoc"></div>
    </div>
    <div class="image-viewer" ng-switch-when="image">
      <img class="img-reponsive" ng-src="{{ ::attachmentUrl }}" />
    </div>
    <div class="download-viewer" ng-switch-when="download">
      <span class="download-message">You cannot view this file type in the Ratelock application.
        <a ng-click="c.download($event)" href>Click here to download</a>
      </span>
    </div>
  </div>
  <div class="document-viewer" ng-if="hasErrors">
    <div class="download-viewer">
      <span class="download-message">You cannot view this file type in the Ratelock application.
        <a ng-click="c.download($event)" href>Click here to download</a>
      </span>
    </div>
  </div>
  <div class="toolbar-bottom" ng-show="c.isDocumentReady && !isHidingToolbar" ng-if="c.attachmentType === 'pdf'">
    <div class="toolbar-controls-right">
      <button class="btn fab btn-primary" ng-click="c.download($event)">
        <i class="icon-download"></i>
      </button>
    </div>
  </div>
  <div class="loading" ng-show="!c.isReady && !c.isDocumentReady">
    <div class="loading-icon">
      <i class="fa fa-spinner fa-spin"></i>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
