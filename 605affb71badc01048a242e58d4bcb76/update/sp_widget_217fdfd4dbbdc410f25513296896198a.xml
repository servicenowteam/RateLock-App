<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[function attachMate($scope, nowAttachmentHandler, $rootScope, spUtil, spModal, $log, spAriaUtil, $document) {
  $scope.errorMessages = [];
  $scope.attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
  $scope.data.action = "";


	spUtil.recordWatch($scope, "sys_attachment", "sys_created_onONToday@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()^table_name=" + $scope.data.table, function (response, data) {
		$scope.attachmentHandler.getAttachmentList();

		if (response.data) {
			var options = {};
			options.operation = response.data.operation;
			options.filename = response.data.display_value;
			options.sys_id = $scope.data.sys_id;
			options.table = $scope.data.table;
			options.state = (response.data.record && response.data.record.state) ? response.data.record.state.value : "";
			//broadcast only if operation is update...we don't need insert and other record updates for now
			if (options.operation === "update" && options.state === "not_available")
				$rootScope.$broadcast("attachment.updated", options);
		}
	});


  $scope.$evalAsync(function () {
    $scope.data.sys_ids.forEach(function (id) {
      $scope.attachmentHandler.setParams($scope.data.table, id, 1024 * 1024 * $scope.data.maxAttachmentSize);
      $scope.attachmentHandler.getAttachmentList();
    });
  });

  $scope.hasAttachments = function () {
    return $scope.attachments && $scope.attachments.length != 0;
  };

  $scope.canWrite = function () {
    return false;
  };

  $scope.confirmDeleteAttachment = function (attachment) {
    var appendTo = $scope.data.appendToId ? $document.find('#' + $scope.data.appendToId) : null;
    spModal.confirm("${Delete Attachment?}", appendTo).then(function () {
      $scope.attachmentHandler.deleteAttachment(attachment);
    });
  };

  $scope.$on('dialog.upload_too_large.show', function (e) {
    $log.error($scope.data.largeAttachmentMsg);
    spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
  });

  $scope.$on('added_attachment', function (evt) {
    $scope.data.action = "added";
    spUtil.update($scope);
  });

  $scope.$on('sn.attachment.scanned', function (evt) {
    $scope.attachmentHandler.getAttachmentList("list");
  });

  $scope.$on('sp.record.can_write', function (evt, answer) {
    $scope.data.canWrite = false;
  });

  function appendError(error) {
    $scope.errorMessages.push(error);
    spUtil.addErrorMessage(error.msg + error.fileName);
  }

  function setAttachments(attachments, action) {
    var VALID_FILES_EXTENSIONS = [
			'pdf',
			'xls',
			'xlsx',
			'doc',
			'docx'
		];
		if ($scope.submitting == true)
      return;
    if ($scope.attachments) {
      $scope.attachments = $scope.attachments.concat(attachments.filter(function(file) {
        return (VALID_FILES_EXTENSIONS.includes(file.ext));
      }));
    } else {
      $scope.attachments = attachments.filter(function(file) {
        return (VALID_FILES_EXTENSIONS.includes(file.ext));
      });
    }
    
    if (!action)
      return;

    if (action === "added") {
      spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
    }

    $scope.data.action = action;
    spUtil.update($scope);
  }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>div.tools.align-right {
	display: none !important;
}
.list-group-item:first-child {
	border-top-right-radius: 0px;
  border-top-left-radius: 0px;
  border-top: none;
}

.list-group-item {
	border-right: none;
  border-left: none;
  border-bottom: none;
}

.sp-drop-area {
  display: block;
  padding: 30px;
  width: 100%;
  border: 1px dashed $panel-default-border;
}

::-webkit-scrollbar {
  width: 0.1em;
}
 
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 0.5px rgba(0, 0, 0, 0.1);
}
 
::-webkit-scrollbar-thumb {
  background-color: $brand-primary;
  border-radius: 0.1em;
  outline: 0.5px solid #eee;
}

.panel {
	border: none;
}

.panel-heading.pad-14 {
	border-bottom: 1px solid #ccc;
}

.panel-scroll {
	overflow-x: hidden !important;
  overflow-y: auto !important;
  max-height: 215px;
}

@media screen and (max-width: 1000px) {
  .panel.panel-primary {
  	display: none;
    visibility: hidden;
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ratesheets-list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Ratesheets List</name>
        <option_schema>[{"hint":"ID of referenced record","name":"record_id","section":"Data","label":"Record ID","type":"string"},{"hint":"Table name of referenced record","name":"record_table","section":"Data","label":"Record Table","type":"string"}]</option_schema>
        <public>false</public>
        <roles>x_momo_ratelock.ratelock_tech</roles>
        <script><![CDATA[(function() {
  data.table = 'x_momo_ratelock_ratesheet';
  data.appendToId = options.appendToId;
  data.sys_ids = [];
  data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
  if (isNaN(data.maxAttachmentSize))
    data.maxAttachmentSize = 24;
  data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
  data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");

  if (!data.table)
    return;

  var gr = new GlideRecord('x_momo_ratelock_ratesheet');
  gr.addEncodedQuery('sys_created_onONToday@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()');
  gr.query();
  while (gr.next()) {
    data.sys_ids.push(gr.getUniqueValue());
  }

  data.canWrite = gr.canWrite();
  data.canAttach = gs.hasRole(gs.getProperty("glide.attachment.role"));
  data.canRead = gr.canRead();
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>douglas.schamberg</sys_created_by>
        <sys_created_on>2019-12-14 21:43:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>217fdfd4dbbdc410f25513296896198a</sys_id>
        <sys_mod_count>110</sys_mod_count>
        <sys_name>Ratesheets List</sys_name>
        <sys_package display_value="Ratelock" source="x_momo_ratelock">605affb71badc01048a242e58d4bcb76</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Ratelock">605affb71badc01048a242e58d4bcb76</sys_scope>
        <sys_update_name>sp_widget_217fdfd4dbbdc410f25513296896198a</sys_update_name>
        <sys_updated_by>douglas.schamberg</sys_updated_by>
        <sys_updated_on>2020-06-20 14:23:10</sys_updated_on>
        <template><![CDATA[<div class="sp-attachments panel-scroll padder-t padder-b" sp-drag-scroll axis="y">
  <div class="sp-no-attachments text-center text-muted padder-b padder-t" ng-show="!hasAttachments()">
    <em>${There are no ratesheets currently available}</em>
  </div>
  <now-attachments-list template="sp_attachment" />
</div>
]]></template>
    </sp_widget>
</record_update>
